# AI贪吃蛇说明  
作者：[GZShi](http://lovep.me)  
版本：1.0.0  
日期：2013/04/14  
邮箱：s@lovep.me  
### 概述  
　　控制贪吃蛇移动的命令有“前进”、“向左”、“向右”三个，贪吃蛇每向前走一步都会从命令队列中取出一个命令，根据命令来决定下一步是继续前进还是向左或向右移动一格。在上述命令队列为空时，游戏会请求AI函数发出新的指令，你需要做的就是编写这个AI函数，使得贪吃蛇在这个函数的驱使下尽可能地吃到更多食物。如果你的AI函数没有更新这个命令队列，则贪吃蛇会一直向前，直到游戏结束。  

### 开发接口  
#### 你需要修改的函数  
>function userAI(GAME, CMD) {  
>	// YOUR CODE  
>}  

　　在这个函数中，参数GAME用于获取游戏的状态信息，参数CMD是需要修改的命令队列。  

#### 给命令队列添加命令  
>CMD.push(direction)  

　　direction应该是一个string类型，当direction=='l'时，表示把一个向左命令入队，当direction=='r'时，表示把一个向右的命令入队，如果不是上述两种情况则表示把一个向前的命令入队。该参数区分大小写。如果一次要把多个命令入队，例如需要向左转向3次、向前进4步、向右转向2次，则可以采取下面的方法一次入队  
>CMD.push('lll    rr');

#### 获取游戏状态  
##### 1 获取蛇的头部  
>GAME.getSnakeHeader();

`入　参`  
无  
`返回值`  
蛇头部的位置结构体，包含x坐标和y坐标。例如`{x:0, y:0}`

##### 2 获取蛇头部往某个方向前进一步的新坐标  
>GAME.getNextHeader(direction);

`入　参`  
direction: 前进方向。可以是'l'、'r'这样的相对方向，也可以是0、1、2、3这样的绝对方向（0、1、2、3分别表示向西、北、东、南前进）。  
`返回值`  
蛇头部的位置结构体，包含x坐标和y坐标。

##### 3 获取食物坐标  
>GAME.getFoodPosition();

`入　参`  
无  
`返回值`  
食物的位置结构体，包含x坐标和y坐标。

##### 4 获取食物相对于某个点的相对坐标  
>GAME.getFoodRelativePos(position);

`入　参`  
position:一个位置结构体，需要计算相对坐标的点  
`返回值`  
一个相对距离结构体，包含x距离和y距离。其中x距离是以蛇的当前方向的“左”为正，y距离以蛇的当前前进方向为正。 

##### 5 获取蛇的方向  
>GAME.getDirection();

`入　参`  
无  
`返回值`  
蛇的绝对方向，返回值0、1、2、3分别表示西、北、东、南。

##### 6 获取蛇的长度  
>GAME.getSnakeLength();

`入　参`  
无  
`返回值`  
整数类型，蛇的长度。

##### 7 获取当前整个地图状态  
>GAME.getMap();

`入　参`  
无  
`返回值`  
一个二维数组；  
为0的元素代表该位置为空白；  
为-1的元素代表该位置是食物；  
\>=1的元素代表该位置是蛇的身体，其中最大的代表头部，1代表尾巴。  

#### 碰撞检测相关  
##### 8 检测撞墙  
>GAME.checkHitWall(position);

`入　参`  
position:待检测的位置坐标。  
`返回值`  
碰撞返回true，否则返回false

##### 9 检测碰撞蛇身体  
>GAME.checkHitSnakeBody(position);

`入　参`  
position:待检测的位置坐标。  
`返回值`  
接触返回true，否则返回false。注：不会与蛇头和蛇尾进行测试。

##### 10 检测某坐标是否是食物  
>GAME.checkHitFood(position);

`入　参`  
position:待检测的位置坐标。  
`返回值`  
是食物返回true，否则返回false。

